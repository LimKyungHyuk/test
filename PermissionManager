package net.khlim.manager;

import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.util.Log;
import android.widget.Toast;

/**
 * Created by khlim on 17. 7. 19..
 */
public class PermissionManager {

    private Activity context;

    public static final int MY_PERMISSIONS_REQUEST_READ_CONTACTS = 1;

    public PermissionManager(Activity context){
        this.context = context;
        init();
    }

    public void init(){
        log("1:" + ContextCompat.checkSelfPermission(context, Manifest.permission.READ_CONTACTS));
        log("2:" + PackageManager.PERMISSION_GRANTED);


        if (ContextCompat.checkSelfPermission(context, Manifest.permission.READ_CONTACTS)!= PackageManager.PERMISSION_GRANTED) {

            log("3:" + ActivityCompat.shouldShowRequestPermissionRationale(context, Manifest.permission.READ_CONTACTS));
            // 이 권한을 필요한 이유를 설명해야하는가?
            if (ActivityCompat.shouldShowRequestPermissionRationale(context, Manifest.permission.READ_CONTACTS)) {

                // 다이어로그같은것을 띄워서 사용자에게 해당 권한이 필요한 이유에 대해 설명합니다
                // 해당 설명이 끝난뒤 requestPermissions()함수를 호출하여 권한허가를 요청해야 합니다
                ActivityCompat.requestPermissions(context,
                        new String[]{Manifest.permission.READ_CONTACTS, Manifest.permission.WRITE_EXTERNAL_STORAGE},
                        MY_PERMISSIONS_REQUEST_READ_CONTACTS);

            } else {

                ActivityCompat.requestPermissions(context,
                        new String[]{Manifest.permission.READ_CONTACTS, Manifest.permission.WRITE_EXTERNAL_STORAGE},
                        MY_PERMISSIONS_REQUEST_READ_CONTACTS);

                // 필요한 권한과 요청 코드를 넣어서 권한허가요청에 대한 결과를 받아야 합니다

//                Intent intent = new Intent(android.provider.Settings.);
//                context.startActivityForResult(intent, 0);



            }
        }
    }
    public void setResult(int requestCode, String permissions[], int[] grantResults){
        switch (requestCode) {
            case MY_PERMISSIONS_REQUEST_READ_CONTACTS:

                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    log("10: 권한허가");
                    // 권한 허가
                    // 해당 권한을 사용해서 작업을 진행할 수 있습니다
                } else {
                    log("11: 권한거부");
                    // 권한 거부
                    // 사용자가 해당권한을 거부했을때 해주어야 할 동작을 수행합니다
                }
                return;
        }
    }

    public void msg(String msg){
        Toast.makeText(context, msg, Toast.LENGTH_SHORT).show();
    }

    public void log(String msg){
        Log.d("PERMISSION", "PERMISSION :" + msg);
    }
}
